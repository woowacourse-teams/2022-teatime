plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.woowacourse'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
    snippetsDir = file('build/generated-snippets')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured:4.4.0'

    //dateTime format
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.1"

    //snake case to camel case (DB table)
    implementation group: 'com.google.guava', name: 'guava', version: '12.0'

    //rest docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

    //slack
    implementation 'com.slack.api:bolt:1.24.0'
    implementation 'com.slack.api:bolt-servlet:1.24.0'
    implementation 'com.slack.api:bolt-jetty:1.24.0'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //문자열 자르기
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation "com.github.maricn:logback-slack-appender:1.6.1"
}

asciidoctor {
    dependsOn test
    inputs.dir snippetsDir
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

tasks.named('test') {
    useJUnitPlatform()
}

processResources.dependsOn('copySecret','copyTestSecret','copySlackWebHook')

task copySecret(type: Copy) {
    from '../config/application.yml'
    into 'src/main/resources'
}

task copyTestSecret(type: Copy) {
    from '../config/application-test.yml'
    into 'src/test/resources'
    rename {
        String fileName -> fileName.replace('application-test', 'application')
    }
}

task copySlackWebHook(type: Copy) {
    from '../config/application-slack-web-hook.yml'
    into 'src/main/resources'
}
